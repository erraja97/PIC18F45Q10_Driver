

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Mar 15 17:02:44 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F45Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,inline
    10                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 25/11/2024 GMT
    18                           ; 
    19                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45Q10 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000FE0                     bsr             equ	4064
    52   000FE9                     fsr0            equ	4073
    53   000FEA                     fsr0h           equ	4074
    54   000FE9                     fsr0l           equ	4073
    55   000FE1                     fsr1            equ	4065
    56   000FE2                     fsr1h           equ	4066
    57   000FE1                     fsr1l           equ	4065
    58   000FD9                     fsr2            equ	4057
    59   000FDA                     fsr2h           equ	4058
    60   000FD9                     fsr2l           equ	4057
    61   000FEF                     indf0           equ	4079
    62   000FE7                     indf1           equ	4071
    63   000FDF                     indf2           equ	4063
    64   000FF2                     intcon          equ	4082
    65   000F80                     nvmcon          equ	3968
    66   000FF9                     pcl             equ	4089
    67   000FFA                     pclath          equ	4090
    68   000FFB                     pclatu          equ	4091
    69   000FEB                     plusw0          equ	4075
    70   000FE3                     plusw1          equ	4067
    71   000FDB                     plusw2          equ	4059
    72   000FED                     postdec0        equ	4077
    73   000FE5                     postdec1        equ	4069
    74   000FDD                     postdec2        equ	4061
    75   000FEE                     postinc0        equ	4078
    76   000FE6                     postinc1        equ	4070
    77   000FDE                     postinc2        equ	4062
    78   000FEC                     preinc0         equ	4076
    79   000FE4                     preinc1         equ	4068
    80   000FDC                     preinc2         equ	4060
    81   000FF3                     prod            equ	4083
    82   000FF4                     prodh           equ	4084
    83   000FF3                     prodl           equ	4083
    84   000FD8                     status          equ	4056
    85   000FF5                     tablat          equ	4085
    86   000FF6                     tblptr          equ	4086
    87   000FF7                     tblptrh         equ	4087
    88   000FF6                     tblptrl         equ	4086
    89   000FF8                     tblptru         equ	4088
    90   000FFD                     tosl            equ	4093
    91   000FE8                     wreg            equ	4072
    92   000000                     
    93                           ; #config settings
    94                           
    95                           	psect	cinit
    96   000B82                     __pcinit:
    97                           	callstack 0
    98   000B82                     start_initialization:
    99                           	callstack 0
   100   000B82                     __initialization:
   101                           	callstack 0
   102   000B82                     end_of_initialization:
   103                           	callstack 0
   104   000B82                     __end_of__initialization:
   105                           	callstack 0
   106   000B82  0E00               	movlw	low (__Lmediumconst shr (0+16))
   107   000B84  6EF8               	movwf	tblptru,c
   108   000B86  0100               	movlb	0
   109   000B88  EFA2  F005         	goto	_main	;jump to C main() function
   110                           
   111                           	psect	cstackCOMRAM
   112   000001                     __pcstackCOMRAM:
   113                           	callstack 0
   114   000001                     GPIO_TogglePin@pin:
   115                           	callstack 0
   116   000001                     GPIO_SetDirection@pin:
   117                           	callstack 0
   118   000001                     delay_ms@ms:
   119                           	callstack 0
   120   000001                     
   121                           ; 1 bytes @ 0x0
   122   000001                     	ds	1
   123   000002                     GPIO_SetDirection@direction:
   124                           	callstack 0
   125   000002                     ??_GPIO_TogglePin:
   126                           
   127                           ; 1 bytes @ 0x1
   128   000002                     	ds	1
   129   000003                     delay_ms@i:
   130                           	callstack 0
   131   000003                     ??_GPIO_SetDirection:
   132   000003                     
   133                           ; 1 bytes @ 0x2
   134   000003                     	ds	1
   135   000004                     GPIO_TogglePin@port:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x3
   139   000004                     	ds	1
   140   000005                     delay_ms@j:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x4
   144   000005                     	ds	1
   145   000006                     GPIO_SetDirection@port:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x5
   149   000006                     	ds	1
   150   000007                     _GPIO_SetDirection$117:
   151                           	callstack 0
   152                           
   153                           ; 2 bytes @ 0x6
   154   000007                     	ds	2
   155   000009                     _GPIO_SetDirection$118:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x8
   159   000009                     	ds	2
   160   00000B                     _GPIO_SetDirection$119:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0xA
   164   00000B                     	ds	2
   165   00000D                     
   166                           ; 1 bytes @ 0xC
   167 ;;
   168 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   169 ;;
   170 ;; *************** function _main *****************
   171 ;; Defined at:
   172 ;;		line 36 in file "src/main.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;		None
   177 ;; Return value:  Size  Location     Type
   178 ;;                  1    wreg      void 
   179 ;; Registers used:
   180 ;;		wreg, status,2, status,0, cstack
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   186 ;;      Params:         0       0       0       0       0       0       0       0       0
   187 ;;      Locals:         0       0       0       0       0       0       0       0       0
   188 ;;      Temps:          0       0       0       0       0       0       0       0       0
   189 ;;      Totals:         0       0       0       0       0       0       0       0       0
   190 ;;Total ram usage:        0 bytes
   191 ;; Hardware stack levels required when called: 1
   192 ;; This function calls:
   193 ;;		_GPIO_Init
   194 ;;		_GPIO_SetDirection
   195 ;;		_GPIO_TogglePin
   196 ;;		_delay_ms
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203   000B44                     __ptext0:
   204                           	callstack 0
   205   000B44                     _main:
   206                           	callstack 30
   207   000B44                     
   208                           ;src/main.c: 38:     GPIO_Init();
   209   000B44  ECBA  F005         	call	_GPIO_Init	;wreg free
   210   000B48                     
   211                           ;src/main.c: 41:     GPIO_SetDirection(0, 0, GPIO_OUTPUT);
   212   000B48  0E00               	movlw	0
   213   000B4A  6E01               	movwf	GPIO_SetDirection@pin^0,c
   214   000B4C  0E00               	movlw	0
   215   000B4E  6E02               	movwf	GPIO_SetDirection@direction^0,c
   216   000B50  0E00               	movlw	0
   217   000B52  EC81  F004         	call	_GPIO_SetDirection
   218   000B56                     l1078:
   219                           
   220                           ;src/main.c: 45:         GPIO_TogglePin(0, 0);
   221   000B56  0E00               	movlw	0
   222   000B58  6E01               	movwf	GPIO_TogglePin@pin^0,c
   223   000B5A  0E00               	movlw	0
   224   000B5C  EC35  F005         	call	_GPIO_TogglePin
   225   000B60                     
   226                           ;src/main.c: 48:         delay_ms(500);
   227   000B60  0E01               	movlw	1
   228   000B62  6E02               	movwf	(delay_ms@ms+1)^0,c
   229   000B64  0EF4               	movlw	244
   230   000B66  6E01               	movwf	delay_ms@ms^0,c
   231   000B68  EC78  F005         	call	_delay_ms	;wreg free
   232   000B6C  EFAB  F005         	goto	l1078
   233   000B70  EFFE  F03F         	goto	start
   234   000B74                     __end_of_main:
   235                           	callstack 0
   236                           
   237 ;; *************** function _delay_ms *****************
   238 ;; Defined at:
   239 ;;		line 24 in file "src/main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;  ms              2    0[COMRAM] unsigned int 
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  j               2    4[COMRAM] volatile unsigned int 
   244 ;;  i               2    2[COMRAM] volatile unsigned int 
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         2       0       0       0       0       0       0       0       0
   255 ;;      Locals:         4       0       0       0       0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0       0       0       0       0
   257 ;;      Totals:         6       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        6 bytes
   259 ;; Hardware stack levels used: 1
   260 ;; This function calls:
   261 ;;		Nothing
   262 ;; This function is called by:
   263 ;;		_main
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text1
   268   000AF0                     __ptext1:
   269                           	callstack 0
   270   000AF0                     _delay_ms:
   271                           	callstack 30
   272   000AF0                     
   273                           ;src/main.c: 25:     volatile unsigned int i, j;;src/main.c: 26:     for (i = 0; i < ms;
      +                           i++) {
   274   000AF0  0E00               	movlw	0
   275   000AF2  6E04               	movwf	(delay_ms@i+1)^0,c	;volatile
   276   000AF4  0E00               	movlw	0
   277   000AF6  6E03               	movwf	delay_ms@i^0,c	;volatile
   278   000AF8  EF96  F005         	goto	l1040
   279   000AFC                     l1028:
   280                           
   281                           ;src/main.c: 27:         for (j = 0; j < 500; j++) {
   282   000AFC  0E00               	movlw	0
   283   000AFE  6E06               	movwf	(delay_ms@j+1)^0,c	;volatile
   284   000B00  0E00               	movlw	0
   285   000B02  6E05               	movwf	delay_ms@j^0,c	;volatile
   286   000B04                     l1030:
   287   000B04  0EF4               	movlw	244
   288   000B06  5C05               	subwf	delay_ms@j^0,w,c	;volatile
   289   000B08  0E01               	movlw	1
   290   000B0A  5806               	subwfb	(delay_ms@j+1)^0,w,c	;volatile
   291   000B0C  A0D8               	btfss	status,0,c
   292   000B0E  EF8B  F005         	goto	u511
   293   000B12  EF8D  F005         	goto	u510
   294   000B16                     u511:
   295   000B16  EF8F  F005         	goto	l33
   296   000B1A                     u510:
   297   000B1A  EF94  F005         	goto	l1038
   298   000B1E                     l33:
   299   000B1E  0000               	nop		;# 
   300   000B20                     
   301                           ;src/main.c: 29:         }
   302   000B20  4A05               	infsnz	delay_ms@j^0,f,c	;volatile
   303   000B22  2A06               	incf	(delay_ms@j+1)^0,f,c	;volatile
   304   000B24  EF82  F005         	goto	l1030
   305   000B28                     l1038:
   306                           
   307                           ;src/main.c: 30:     }
   308   000B28  4A03               	infsnz	delay_ms@i^0,f,c	;volatile
   309   000B2A  2A04               	incf	(delay_ms@i+1)^0,f,c	;volatile
   310   000B2C                     l1040:
   311   000B2C  5001               	movf	delay_ms@ms^0,w,c
   312   000B2E  5C03               	subwf	delay_ms@i^0,w,c	;volatile
   313   000B30  5002               	movf	(delay_ms@ms+1)^0,w,c
   314   000B32  5804               	subwfb	(delay_ms@i+1)^0,w,c	;volatile
   315   000B34  A0D8               	btfss	status,0,c
   316   000B36  EF9F  F005         	goto	u521
   317   000B3A  EFA1  F005         	goto	u520
   318   000B3E                     u521:
   319   000B3E  EF7E  F005         	goto	l1028
   320   000B42                     u520:
   321   000B42  0012               	return		;funcret
   322   000B44                     __end_of_delay_ms:
   323                           	callstack 0
   324                           
   325 ;; *************** function _GPIO_TogglePin *****************
   326 ;; Defined at:
   327 ;;		line 81 in file "includes/gpio.h"
   328 ;; Parameters:    Size  Location     Type
   329 ;;  port            1    wreg     unsigned char 
   330 ;;  pin             1    0[COMRAM] unsigned char 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  port            1    3[COMRAM] unsigned char 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   342 ;;      Params:         1       0       0       0       0       0       0       0       0
   343 ;;      Locals:         1       0       0       0       0       0       0       0       0
   344 ;;      Temps:          2       0       0       0       0       0       0       0       0
   345 ;;      Totals:         4       0       0       0       0       0       0       0       0
   346 ;;Total ram usage:        4 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text2
   356   000A6A                     __ptext2:
   357                           	callstack 0
   358   000A6A                     _GPIO_TogglePin:
   359                           	callstack 30
   360                           
   361                           ;incstack = 0
   362                           ;GPIO_TogglePin@port stored from wreg
   363   000A6A  6E04               	movwf	GPIO_TogglePin@port^0,c
   364   000A6C                     
   365                           ;includes/gpio.h: 82:     switch (port) {
   366   000A6C  EF68  F005         	goto	l1024
   367   000A70                     l1016:
   368   000A70  C001  F002         	movff	GPIO_TogglePin@pin,??_GPIO_TogglePin
   369   000A74  0E01               	movlw	1
   370   000A76  6E03               	movwf	(??_GPIO_TogglePin+1)^0,c
   371   000A78  2A02               	incf	??_GPIO_TogglePin^0,f,c
   372   000A7A  EF41  F005         	goto	u484
   373   000A7E                     u485:
   374   000A7E  90D8               	bcf	status,0,c
   375   000A80  3603               	rlcf	(??_GPIO_TogglePin+1)^0,f,c
   376   000A82                     u484:
   377   000A82  2E02               	decfsz	??_GPIO_TogglePin^0,f,c
   378   000A84  EF3F  F005         	goto	u485
   379   000A88  5003               	movf	(??_GPIO_TogglePin+1)^0,w,c
   380   000A8A  1A82               	xorwf	130,f,c	;volatile
   381   000A8C  EF77  F005         	goto	l28
   382   000A90                     l1018:
   383   000A90  C001  F002         	movff	GPIO_TogglePin@pin,??_GPIO_TogglePin
   384   000A94  0E01               	movlw	1
   385   000A96  6E03               	movwf	(??_GPIO_TogglePin+1)^0,c
   386   000A98  2A02               	incf	??_GPIO_TogglePin^0,f,c
   387   000A9A  EF51  F005         	goto	u494
   388   000A9E                     u495:
   389   000A9E  90D8               	bcf	status,0,c
   390   000AA0  3603               	rlcf	(??_GPIO_TogglePin+1)^0,f,c
   391   000AA2                     u494:
   392   000AA2  2E02               	decfsz	??_GPIO_TogglePin^0,f,c
   393   000AA4  EF4F  F005         	goto	u495
   394   000AA8  5003               	movf	(??_GPIO_TogglePin+1)^0,w,c
   395   000AAA  1A83               	xorwf	131,f,c	;volatile
   396   000AAC  EF77  F005         	goto	l28
   397   000AB0                     l1020:
   398   000AB0  C001  F002         	movff	GPIO_TogglePin@pin,??_GPIO_TogglePin
   399   000AB4  0E01               	movlw	1
   400   000AB6  6E03               	movwf	(??_GPIO_TogglePin+1)^0,c
   401   000AB8  2A02               	incf	??_GPIO_TogglePin^0,f,c
   402   000ABA  EF61  F005         	goto	u504
   403   000ABE                     u505:
   404   000ABE  90D8               	bcf	status,0,c
   405   000AC0  3603               	rlcf	(??_GPIO_TogglePin+1)^0,f,c
   406   000AC2                     u504:
   407   000AC2  2E02               	decfsz	??_GPIO_TogglePin^0,f,c
   408   000AC4  EF5F  F005         	goto	u505
   409   000AC8  5003               	movf	(??_GPIO_TogglePin+1)^0,w,c
   410   000ACA  1A84               	xorwf	132,f,c	;volatile
   411   000ACC  EF77  F005         	goto	l28
   412   000AD0                     l1024:
   413   000AD0  5004               	movf	GPIO_TogglePin@port^0,w,c
   414                           
   415                           ; Switch size 1, requested type "simple"
   416                           ; Number of cases is 3, Range of values is 0 to 2
   417                           ; switch strategies available:
   418                           ; Name         Instructions Cycles
   419                           ; simple_byte           10     6 (average)
   420                           ;	Chosen strategy is simple_byte
   421   000AD2  0A00               	xorlw	0	; case 0
   422   000AD4  B4D8               	btfsc	status,2,c
   423   000AD6  EF38  F005         	goto	l1016
   424   000ADA  0A01               	xorlw	1	; case 1
   425   000ADC  B4D8               	btfsc	status,2,c
   426   000ADE  EF48  F005         	goto	l1018
   427   000AE2  0A03               	xorlw	3	; case 2
   428   000AE4  B4D8               	btfsc	status,2,c
   429   000AE6  EF58  F005         	goto	l1020
   430   000AEA  EF77  F005         	goto	l28
   431   000AEE                     l28:
   432   000AEE  0012               	return		;funcret
   433   000AF0                     __end_of_GPIO_TogglePin:
   434                           	callstack 0
   435                           
   436 ;; *************** function _GPIO_SetDirection *****************
   437 ;; Defined at:
   438 ;;		line 29 in file "src/gpio.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  port            1    wreg     unsigned char 
   441 ;;  pin             1    0[COMRAM] unsigned char 
   442 ;;  direction       1    1[COMRAM] enum E87
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  port            1    5[COMRAM] unsigned char 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   454 ;;      Params:         2       0       0       0       0       0       0       0       0
   455 ;;      Locals:         7       0       0       0       0       0       0       0       0
   456 ;;      Temps:          3       0       0       0       0       0       0       0       0
   457 ;;      Totals:        12       0       0       0       0       0       0       0       0
   458 ;;Total ram usage:       12 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text3
   468   000902                     __ptext3:
   469                           	callstack 0
   470   000902                     _GPIO_SetDirection:
   471                           	callstack 30
   472                           
   473                           ;incstack = 0
   474                           ;GPIO_SetDirection@port stored from wreg
   475   000902  6E06               	movwf	GPIO_SetDirection@port^0,c
   476   000904                     
   477                           ;src/gpio.c: 30:     if (pin > 7) return;
   478   000904  0E07               	movlw	7
   479   000906  6401               	cpfsgt	GPIO_SetDirection@pin^0,c
   480   000908  EF88  F004         	goto	u531
   481   00090C  EF8A  F004         	goto	u530
   482   000910                     u531:
   483   000910  EF25  F005         	goto	l1072
   484   000914                     u530:
   485   000914  EF34  F005         	goto	l75
   486   000918                     l1046:
   487                           
   488                           ;src/gpio.c: 34:             (*(volatile PORTA_t*) 0xF87).value = (direction) ? ((*(vola
      +                          tile PORTA_t*) 0xF87).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF87).value
      +                           & (uint8_t)~(1 << pin));
   489   000918  5002               	movf	GPIO_SetDirection@direction^0,w,c
   490   00091A  A4D8               	btfss	status,2,c
   491   00091C  EF92  F004         	goto	u541
   492   000920  EF94  F004         	goto	u540
   493   000924                     u541:
   494   000924  EFA9  F004         	goto	l1050
   495   000928                     u540:
   496   000928  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   497   00092C  0E01               	movlw	1
   498   00092E  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   499   000930  2A03               	incf	??_GPIO_SetDirection^0,f,c
   500   000932  EF9D  F004         	goto	u554
   501   000936                     u555:
   502   000936  90D8               	bcf	status,0,c
   503   000938  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   504   00093A                     u554:
   505   00093A  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   506   00093C  EF9B  F004         	goto	u555
   507   000940  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   508   000942  0AFF               	xorlw	255
   509   000944  1487               	andwf	135,w,c	;volatile
   510   000946  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   511   000948  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   512   00094A  6E07               	movwf	_GPIO_SetDirection$117^0,c
   513   00094C  6A08               	clrf	(_GPIO_SetDirection$117+1)^0,c
   514   00094E  EFBB  F004         	goto	l1052
   515   000952                     l1050:
   516   000952  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   517   000956  0E01               	movlw	1
   518   000958  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   519   00095A  2A03               	incf	??_GPIO_SetDirection^0,f,c
   520   00095C  EFB2  F004         	goto	u564
   521   000960                     u565:
   522   000960  90D8               	bcf	status,0,c
   523   000962  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   524   000964                     u564:
   525   000964  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   526   000966  EFB0  F004         	goto	u565
   527   00096A  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   528   00096C  1087               	iorwf	135,w,c	;volatile
   529   00096E  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   530   000970  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   531   000972  6E07               	movwf	_GPIO_SetDirection$117^0,c
   532   000974  6A08               	clrf	(_GPIO_SetDirection$117+1)^0,c
   533   000976                     l1052:
   534   000976  C007  FF87         	movff	_GPIO_SetDirection$117,3975	;volatile
   535                           
   536                           ;src/gpio.c: 35:             break;
   537   00097A  EF34  F005         	goto	l75
   538   00097E                     l1054:
   539                           
   540                           ;src/gpio.c: 37:             (*(volatile PORTA_t*) 0xF88).value = (direction) ? ((*(vola
      +                          tile PORTA_t*) 0xF88).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF88).value
      +                           & (uint8_t)~(1 << pin));
   541   00097E  5002               	movf	GPIO_SetDirection@direction^0,w,c
   542   000980  A4D8               	btfss	status,2,c
   543   000982  EFC5  F004         	goto	u571
   544   000986  EFC7  F004         	goto	u570
   545   00098A                     u571:
   546   00098A  EFDC  F004         	goto	l1058
   547   00098E                     u570:
   548   00098E  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   549   000992  0E01               	movlw	1
   550   000994  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   551   000996  2A03               	incf	??_GPIO_SetDirection^0,f,c
   552   000998  EFD0  F004         	goto	u584
   553   00099C                     u585:
   554   00099C  90D8               	bcf	status,0,c
   555   00099E  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   556   0009A0                     u584:
   557   0009A0  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   558   0009A2  EFCE  F004         	goto	u585
   559   0009A6  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   560   0009A8  0AFF               	xorlw	255
   561   0009AA  1488               	andwf	136,w,c	;volatile
   562   0009AC  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   563   0009AE  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   564   0009B0  6E09               	movwf	_GPIO_SetDirection$118^0,c
   565   0009B2  6A0A               	clrf	(_GPIO_SetDirection$118+1)^0,c
   566   0009B4  EFEE  F004         	goto	l1060
   567   0009B8                     l1058:
   568   0009B8  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   569   0009BC  0E01               	movlw	1
   570   0009BE  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   571   0009C0  2A03               	incf	??_GPIO_SetDirection^0,f,c
   572   0009C2  EFE5  F004         	goto	u594
   573   0009C6                     u595:
   574   0009C6  90D8               	bcf	status,0,c
   575   0009C8  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   576   0009CA                     u594:
   577   0009CA  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   578   0009CC  EFE3  F004         	goto	u595
   579   0009D0  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   580   0009D2  1088               	iorwf	136,w,c	;volatile
   581   0009D4  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   582   0009D6  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   583   0009D8  6E09               	movwf	_GPIO_SetDirection$118^0,c
   584   0009DA  6A0A               	clrf	(_GPIO_SetDirection$118+1)^0,c
   585   0009DC                     l1060:
   586   0009DC  C009  FF88         	movff	_GPIO_SetDirection$118,3976	;volatile
   587                           
   588                           ;src/gpio.c: 38:             break;
   589   0009E0  EF34  F005         	goto	l75
   590   0009E4                     l1062:
   591                           
   592                           ;src/gpio.c: 40:             (*(volatile PORTA_t*) 0xF89).value = (direction) ? ((*(vola
      +                          tile PORTA_t*) 0xF89).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF89).value
      +                           & (uint8_t)~(1 << pin));
   593   0009E4  5002               	movf	GPIO_SetDirection@direction^0,w,c
   594   0009E6  A4D8               	btfss	status,2,c
   595   0009E8  EFF8  F004         	goto	u601
   596   0009EC  EFFA  F004         	goto	u600
   597   0009F0                     u601:
   598   0009F0  EF0F  F005         	goto	l1066
   599   0009F4                     u600:
   600   0009F4  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   601   0009F8  0E01               	movlw	1
   602   0009FA  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   603   0009FC  2A03               	incf	??_GPIO_SetDirection^0,f,c
   604   0009FE  EF03  F005         	goto	u614
   605   000A02                     u615:
   606   000A02  90D8               	bcf	status,0,c
   607   000A04  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   608   000A06                     u614:
   609   000A06  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   610   000A08  EF01  F005         	goto	u615
   611   000A0C  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   612   000A0E  0AFF               	xorlw	255
   613   000A10  1489               	andwf	137,w,c	;volatile
   614   000A12  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   615   000A14  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   616   000A16  6E0B               	movwf	_GPIO_SetDirection$119^0,c
   617   000A18  6A0C               	clrf	(_GPIO_SetDirection$119+1)^0,c
   618   000A1A  EF21  F005         	goto	l1068
   619   000A1E                     l1066:
   620   000A1E  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   621   000A22  0E01               	movlw	1
   622   000A24  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   623   000A26  2A03               	incf	??_GPIO_SetDirection^0,f,c
   624   000A28  EF18  F005         	goto	u624
   625   000A2C                     u625:
   626   000A2C  90D8               	bcf	status,0,c
   627   000A2E  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   628   000A30                     u624:
   629   000A30  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   630   000A32  EF16  F005         	goto	u625
   631   000A36  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   632   000A38  1089               	iorwf	137,w,c	;volatile
   633   000A3A  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   634   000A3C  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   635   000A3E  6E0B               	movwf	_GPIO_SetDirection$119^0,c
   636   000A40  6A0C               	clrf	(_GPIO_SetDirection$119+1)^0,c
   637   000A42                     l1068:
   638   000A42  C00B  FF89         	movff	_GPIO_SetDirection$119,3977	;volatile
   639                           
   640                           ;src/gpio.c: 41:             break;
   641   000A46  EF34  F005         	goto	l75
   642   000A4A                     l1072:
   643   000A4A  5006               	movf	GPIO_SetDirection@port^0,w,c
   644                           
   645                           ; Switch size 1, requested type "simple"
   646                           ; Number of cases is 3, Range of values is 0 to 2
   647                           ; switch strategies available:
   648                           ; Name         Instructions Cycles
   649                           ; simple_byte           10     6 (average)
   650                           ;	Chosen strategy is simple_byte
   651   000A4C  0A00               	xorlw	0	; case 0
   652   000A4E  B4D8               	btfsc	status,2,c
   653   000A50  EF8C  F004         	goto	l1046
   654   000A54  0A01               	xorlw	1	; case 1
   655   000A56  B4D8               	btfsc	status,2,c
   656   000A58  EFBF  F004         	goto	l1054
   657   000A5C  0A03               	xorlw	3	; case 2
   658   000A5E  B4D8               	btfsc	status,2,c
   659   000A60  EFF2  F004         	goto	l1062
   660   000A64  EF34  F005         	goto	l75
   661   000A68                     l75:
   662   000A68  0012               	return		;funcret
   663   000A6A                     __end_of_GPIO_SetDirection:
   664                           	callstack 0
   665                           
   666 ;; *************** function _GPIO_Init *****************
   667 ;; Defined at:
   668 ;;		line 16 in file "src/gpio.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		None
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   682 ;;      Params:         0       0       0       0       0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0       0       0
   685 ;;      Totals:         0       0       0       0       0       0       0       0       0
   686 ;;Total ram usage:        0 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text4
   696   000B74                     __ptext4:
   697                           	callstack 0
   698   000B74                     _GPIO_Init:
   699                           	callstack 30
   700   000B74                     
   701                           ;src/gpio.c: 17:     (*(volatile PORTA_t*) 0xF87).value = 0b00000000;
   702   000B74  6A87               	clrf	135,c	;volatile
   703                           
   704                           ;src/gpio.c: 18:     (*(volatile PORTA_t*) 0xF88).value = 0b11111111;
   705   000B76  6888               	setf	136,c	;volatile
   706                           
   707                           ;src/gpio.c: 19:     (*(volatile PORTA_t*) 0xF89).value = 0b00000000;
   708   000B78  6A89               	clrf	137,c	;volatile
   709                           
   710                           ;src/gpio.c: 21:     (*(volatile PORTA_t*) 0xF82).value = 0b00000000;
   711   000B7A  6A82               	clrf	130,c	;volatile
   712                           
   713                           ;src/gpio.c: 22:     (*(volatile PORTA_t*) 0xF83).value = 0b00000000;
   714   000B7C  6A83               	clrf	131,c	;volatile
   715                           
   716                           ;src/gpio.c: 23:     (*(volatile PORTA_t*) 0xF84).value = 0b00000000;
   717   000B7E  6A84               	clrf	132,c	;volatile
   718   000B80  0012               	return		;funcret
   719   000B82                     __end_of_GPIO_Init:
   720                           	callstack 0
   721                           
   722                           	psect	smallconst
   723   000900                     __psmallconst:
   724                           	callstack 0
   725   000900  00                 	db	0
   726   000901  00                 	db	0	; dummy byte at the end
   727   000900                     __smallconst    set	__psmallconst
   728   000900                     __mediumconst   set	__psmallconst
   729   000002                     __activetblptr  equ	2
   730                           
   731                           	psect	rparam
   732   000001                     ___rparam_used  equ	1
   733   000000                     ___param_bank   equ	0
   734   000000                     __Lparam        equ	__Lrparam
   735   000000                     __Hparam        equ	__Hrparam
   736                           
   737                           	psect	config
   738                           
   739                           ;Config register CONFIG1L @ 0x300000
   740                           ;	External Oscillator mode Selection bits
   741                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   742                           ;	Power-up default value for COSC bits
   743                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   744   300000                     	org	3145728
   745   300000  FA                 	db	250
   746                           
   747                           ;Config register CONFIG1H @ 0x300001
   748                           ;	Clock Out Enable bit
   749                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   750                           ;	Clock Switch Enable bit
   751                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   752                           ;	Fail-Safe Clock Monitor Enable bit
   753                           ;	FCMEN = 0x1, unprogrammed default
   754   300001                     	org	3145729
   755   300001  FF                 	db	255
   756                           
   757                           ;Config register CONFIG2L @ 0x300002
   758                           ;	Master Clear Enable bit
   759                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
   760                           ;	Power-up Timer Enable bit
   761                           ;	PWRTE = OFF, Power up timer disabled
   762                           ;	Low-power BOR enable bit
   763                           ;	LPBOREN = OFF, Low power BOR is disabled
   764                           ;	Brown-out Reset Enable bits
   765                           ;	BOREN = ON, Brown-out Reset enabled according to SBOREN
   766   300002                     	org	3145730
   767   300002  7F                 	db	127
   768                           
   769                           ;Config register CONFIG2H @ 0x300003
   770                           ;	Brown Out Reset Voltage selection bits
   771                           ;	BORV = 0x3, unprogrammed default
   772                           ;	ZCD Disable bit
   773                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   774                           ;	PPSLOCK bit One-Way Set Enable bit
   775                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   776                           ;	Stack Full/Underflow Reset Enable bit
   777                           ;	STVREN = ON, Stack full/underflow will cause Reset
   778                           ;	Extended Instruction Set Enable bit
   779                           ;	XINST = 0x1, unprogrammed default
   780   300003                     	org	3145731
   781   300003  FF                 	db	255
   782                           
   783                           ;Config register CONFIG3L @ 0x300004
   784                           ;	WDT Period Select bits
   785                           ;	WDTCPS = 0x1F, unprogrammed default
   786                           ;	WDT operating mode
   787                           ;	WDTE = OFF, WDT Disabled
   788   300004                     	org	3145732
   789   300004  9F                 	db	159
   790                           
   791                           ;Config register CONFIG3H @ 0x300005
   792                           ;	unspecified, using default values
   793                           ;	WDT Window Select bits
   794                           ;	WDTCWS = 0x7, unprogrammed default
   795                           ;	WDT input clock selector
   796                           ;	WDTCCS = 0x7, unprogrammed default
   797   300005                     	org	3145733
   798   300005  FF                 	db	255
   799                           
   800                           ;Config register CONFIG4L @ 0x300006
   801                           ;	unspecified, using default values
   802                           ;	Write Protection Block 0
   803                           ;	WRT0 = 0x1, unprogrammed default
   804                           ;	Write Protection Block 1
   805                           ;	WRT1 = 0x1, unprogrammed default
   806                           ;	Write Protection Block 2
   807                           ;	WRT2 = 0x1, unprogrammed default
   808                           ;	Write Protection Block 3
   809                           ;	WRT3 = 0x1, unprogrammed default
   810   300006                     	org	3145734
   811   300006  FF                 	db	255
   812                           
   813                           ;Config register CONFIG4H @ 0x300007
   814                           ;	Configuration Register Write Protection bit
   815                           ;	WRTC = 0x1, unprogrammed default
   816                           ;	Boot Block Write Protection bit
   817                           ;	WRTB = 0x1, unprogrammed default
   818                           ;	Data EEPROM Write Protection bit
   819                           ;	WRTD = 0x1, unprogrammed default
   820                           ;	Scanner Enable bit
   821                           ;	SCANE = 0x1, unprogrammed default
   822                           ;	Low Voltage Programming Enable bit
   823                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
   824   300007                     	org	3145735
   825   300007  DF                 	db	223
   826                           tosu	equ	0xFFF
   827                           tosh	equ	0xFFE
   828                           tosl	equ	0xFFD
   829                           stkptr	equ	0xFFC
   830                           pclatu	equ	0xFFB
   831                           pclath	equ	0xFFA
   832                           pcl	equ	0xFF9
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           prodh	equ	0xFF4
   838                           prodl	equ	0xFF3
   839                           indf0	equ	0xFEF
   840                           postinc0	equ	0xFEE
   841                           postdec0	equ	0xFED
   842                           preinc0	equ	0xFEC
   843                           plusw0	equ	0xFEB
   844                           fsr0h	equ	0xFEA
   845                           fsr0l	equ	0xFE9
   846                           wreg	equ	0xFE8
   847                           indf1	equ	0xFE7
   848                           postinc1	equ	0xFE6
   849                           postdec1	equ	0xFE5
   850                           preinc1	equ	0xFE4
   851                           plusw1	equ	0xFE3
   852                           fsr1h	equ	0xFE2
   853                           fsr1l	equ	0xFE1
   854                           bsr	equ	0xFE0
   855                           indf2	equ	0xFDF
   856                           postinc2	equ	0xFDE
   857                           postdec2	equ	0xFDD
   858                           preinc2	equ	0xFDC
   859                           plusw2	equ	0xFDB
   860                           fsr2h	equ	0xFDA
   861                           fsr2l	equ	0xFD9
   862                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_GPIO_SetDirection

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     512
                          _GPIO_Init
                  _GPIO_SetDirection
                     _GPIO_TogglePin
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_TogglePin                                       4     3      1      96
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_SetDirection                                   12    10      2     323
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Init
   _GPIO_SetDirection
   _GPIO_TogglePin
   _delay_ms

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBIGSFR_1        481      0       0      0.0%
BITBIGSFR          256      0       0      0.0%
COMRAM              95     12      12     12.6%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BIGRAM            2047      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      12      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Mar 15 17:02:44 2025

                        l33 0B1E                          l28 0AEE                          l36 0B42  
                        l71 0B80                          l75 0A68                         l834 0B74  
                       u510 0B1A                         u511 0B16                         u600 09F4  
                       u504 0AC2                         u520 0B42                         u601 09F0  
                       u505 0ABE                         u521 0B3E                         u530 0914  
                       u531 0910                         u540 0928                         u541 0924  
                       u614 0A06                         u615 0A02                         u624 0A30  
                       u625 0A2C                         u570 098E                         u554 093A  
                       u571 098A                         u555 0936                         u564 0964  
                       u484 0A82                         u565 0960                         u485 0A7E  
                       u494 0AA2                         u495 0A9E                         u584 09A0  
                       u585 099C                         u594 09CA                         u595 09C6  
                      l1020 0AB0                        l1014 0A6C                        l1030 0B04  
                      l1016 0A70                        l1024 0AD0                        l1040 0B2C  
                      l1050 0952                        l1042 0904                        l1018 0A90  
                      l1034 0B20                        l1026 0AF0                        l1060 09DC  
                      l1052 0976                        l1028 0AFC                        l1062 09E4  
                      l1054 097E                        l1046 0918                        l1038 0B28  
                      l1064 09F4                        l1056 098E                        l1048 0928  
                      l1072 0A4A                        l1080 0B60                        l1066 0A1E  
                      l1058 09B8                        l1074 0B44                        l1068 0A42  
                      l1076 0B48                        l1078 0B56                        _main 0B44  
                      start 7FFC                ___param_bank 0000                       ?_main 0001  
GPIO_SetDirection@direction 0002                       status 0FD8             __initialization 0B82  
              __end_of_main 0B74                      ??_main 000D               __activetblptr 0002  
         __end_of_GPIO_Init 0B82              _GPIO_TogglePin 0A6A            __end_of_delay_ms 0B44  
                    isa$std 0001                __mediumconst 0900                      tblptru 0FF8  
         GPIO_TogglePin@pin 0001           _GPIO_SetDirection 0902      __end_of_GPIO_TogglePin 0AF0  
        ?_GPIO_SetDirection 0001                  __accesstop 0060     __end_of__initialization 0B82  
             ___rparam_used 0001         ??_GPIO_SetDirection 0003              __pcstackCOMRAM 0001  
 __end_of_GPIO_SetDirection 0A6A             ?_GPIO_TogglePin 0001        GPIO_SetDirection@pin 0001  
                 ?_delay_ms 0001                     __Hparam 0000                     __Lparam 0000  
              __psmallconst 0900                     __pcinit 0B82                     __ramtop 0900  
                   __ptext0 0B44                     __ptext1 0AF0                     __ptext2 0A6A  
                   __ptext3 0902                     __ptext4 0B74                  ??_delay_ms 0003  
                 _GPIO_Init 0B74                  delay_ms@ms 0001        end_of_initialization 0B82  
             __Lmediumconst 0000          GPIO_TogglePin@port 0004                  ?_GPIO_Init 0001  
          ??_GPIO_TogglePin 0002         start_initialization 0B82                 ??_GPIO_Init 0001  
     GPIO_SetDirection@port 0006                 __smallconst 0900                   delay_ms@i 0003  
                 delay_ms@j 0005       _GPIO_SetDirection$117 0007       _GPIO_SetDirection$118 0009  
     _GPIO_SetDirection$119 000B                    __Hrparam 0000                    __Lrparam 0000  
                  _delay_ms 0AF0                    isa$xinst 0000  
