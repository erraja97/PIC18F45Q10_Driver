

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Mar 15 18:12:35 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F45Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 25/11/2024 GMT
    19                           ; 
    20                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45Q10 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000FE0                     bsr             equ	4064
    53   000FE9                     fsr0            equ	4073
    54   000FEA                     fsr0h           equ	4074
    55   000FE9                     fsr0l           equ	4073
    56   000FE1                     fsr1            equ	4065
    57   000FE2                     fsr1h           equ	4066
    58   000FE1                     fsr1l           equ	4065
    59   000FD9                     fsr2            equ	4057
    60   000FDA                     fsr2h           equ	4058
    61   000FD9                     fsr2l           equ	4057
    62   000FEF                     indf0           equ	4079
    63   000FE7                     indf1           equ	4071
    64   000FDF                     indf2           equ	4063
    65   000FF2                     intcon          equ	4082
    66   000F80                     nvmcon          equ	3968
    67   000FF9                     pcl             equ	4089
    68   000FFA                     pclath          equ	4090
    69   000FFB                     pclatu          equ	4091
    70   000FEB                     plusw0          equ	4075
    71   000FE3                     plusw1          equ	4067
    72   000FDB                     plusw2          equ	4059
    73   000FED                     postdec0        equ	4077
    74   000FE5                     postdec1        equ	4069
    75   000FDD                     postdec2        equ	4061
    76   000FEE                     postinc0        equ	4078
    77   000FE6                     postinc1        equ	4070
    78   000FDE                     postinc2        equ	4062
    79   000FEC                     preinc0         equ	4076
    80   000FE4                     preinc1         equ	4068
    81   000FDC                     preinc2         equ	4060
    82   000FF3                     prod            equ	4083
    83   000FF4                     prodh           equ	4084
    84   000FF3                     prodl           equ	4083
    85   000FD8                     status          equ	4056
    86   000FF5                     tablat          equ	4085
    87   000FF6                     tblptr          equ	4086
    88   000FF7                     tblptrh         equ	4087
    89   000FF6                     tblptrl         equ	4086
    90   000FF8                     tblptru         equ	4088
    91   000FFD                     tosl            equ	4093
    92   000FE8                     wreg            equ	4072
    93   000000                     
    94                           ; #config settings
    95                           
    96                           	psect	cinit
    97   000E3C                     __pcinit:
    98                           	callstack 0
    99   000E3C                     start_initialization:
   100                           	callstack 0
   101   000E3C                     __initialization:
   102                           	callstack 0
   103   000E3C                     end_of_initialization:
   104                           	callstack 0
   105   000E3C                     __end_of__initialization:
   106                           	callstack 0
   107   000E3C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108   000E3E  6EF8               	movwf	tblptru,c
   109   000E40  0100               	movlb	0
   110   000E42  EFEF  F006         	goto	_main	;jump to C main() function
   111                           
   112                           	psect	cstackCOMRAM
   113   000001                     __pcstackCOMRAM:
   114                           	callstack 0
   115   000001                     GPIO_SetDirection@pin:
   116                           	callstack 0
   117   000001                     GPIO_Read@pin:
   118                           	callstack 0
   119   000001                     delay_ms@ms:
   120                           	callstack 0
   121   000001                     
   122                           ; 1 bytes @ 0x0
   123   000001                     	ds	1
   124   000002                     GPIO_SetDirection@direction:
   125                           	callstack 0
   126   000002                     ??_GPIO_Read:
   127                           
   128                           ; 1 bytes @ 0x1
   129   000002                     	ds	1
   130   000003                     delay_ms@j:
   131                           	callstack 0
   132   000003                     ??_GPIO_SetDirection:
   133   000003                     
   134                           ; 1 bytes @ 0x2
   135   000003                     	ds	1
   136   000004                     GPIO_Read@port:
   137                           	callstack 0
   138                           
   139                           ; 1 bytes @ 0x3
   140   000004                     	ds	1
   141   000005                     _GPIO_Read$105:
   142                           	callstack 0
   143                           
   144                           ; 2 bytes @ 0x4
   145   000005                     	ds	1
   146   000006                     GPIO_SetDirection@port:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x5
   150   000006                     	ds	1
   151   000007                     _GPIO_SetDirection$92:
   152                           	callstack 0
   153   000007                     _GPIO_Read$106:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x6
   157   000007                     	ds	2
   158   000009                     _GPIO_SetDirection$93:
   159                           	callstack 0
   160   000009                     _GPIO_Read$107:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0x8
   164   000009                     	ds	2
   165   00000B                     GPIO_Write@pin:
   166                           	callstack 0
   167   00000B                     _GPIO_SetDirection$94:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0xA
   171   00000B                     	ds	1
   172   00000C                     GPIO_Write@value:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0xB
   176   00000C                     	ds	1
   177   00000D                     ??_GPIO_Write:
   178                           
   179                           ; 1 bytes @ 0xC
   180   00000D                     	ds	3
   181   000010                     GPIO_Write@port:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0xF
   185   000010                     	ds	1
   186   000011                     _GPIO_Write$99:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x10
   190   000011                     	ds	2
   191   000013                     _GPIO_Write$100:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x12
   195   000013                     	ds	2
   196   000015                     _GPIO_Write$101:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x14
   200   000015                     	ds	2
   201   000017                     
   202                           ; 1 bytes @ 0x16
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 35 in file "src/main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0       0       0       0       0
   224 ;;      Temps:          0       0       0       0       0       0       0       0       0
   225 ;;      Totals:         0       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        0 bytes
   227 ;; Hardware stack levels required when called: 1
   228 ;; This function calls:
   229 ;;		_GPIO_Init
   230 ;;		_GPIO_Read
   231 ;;		_GPIO_SetDirection
   232 ;;		_GPIO_Write
   233 ;;		_delay_ms
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text0
   240   000DDE                     __ptext0:
   241                           	callstack 0
   242   000DDE                     _main:
   243                           	callstack 30
   244   000DDE                     
   245                           ;src/main.c: 37:     GPIO_Init();
   246   000DDE  EC17  F007         	call	_GPIO_Init	;wreg free
   247   000DE2                     
   248                           ;src/main.c: 40:     GPIO_SetDirection(0, 0, GPIO_OUTPUT);
   249   000DE2  0E00               	movlw	0
   250   000DE4  6E01               	movwf	GPIO_SetDirection@pin^0,c
   251   000DE6  0E00               	movlw	0
   252   000DE8  6E02               	movwf	GPIO_SetDirection@direction^0,c
   253   000DEA  0E00               	movlw	0
   254   000DEC  EC0C  F006         	call	_GPIO_SetDirection
   255   000DF0                     l1146:
   256                           
   257                           ;src/main.c: 44:         GPIO_Write(0, 0, !GPIO_Read(0, 0));
   258   000DF0  0E00               	movlw	0
   259   000DF2  6E0B               	movwf	GPIO_Write@pin^0,c
   260   000DF4  0E00               	movlw	0
   261   000DF6  6E01               	movwf	GPIO_Read@pin^0,c
   262   000DF8  0E00               	movlw	0
   263   000DFA  EC81  F004         	call	_GPIO_Read
   264   000DFE  0900               	iorlw	0
   265   000E00  B4D8               	btfsc	status,2,c
   266   000E02  EF05  F007         	goto	u821
   267   000E06  EF08  F007         	goto	u820
   268   000E0A                     u821:
   269   000E0A  0E01               	movlw	1
   270   000E0C  EF09  F007         	goto	u830
   271   000E10                     u820:
   272   000E10  0E00               	movlw	0
   273   000E12                     u830:
   274   000E12  6E0C               	movwf	GPIO_Write@value^0,c
   275   000E14  0E00               	movlw	0
   276   000E16  EC54  F005         	call	_GPIO_Write
   277   000E1A                     
   278                           ;src/main.c: 47:         delay_ms(500);
   279   000E1A  0E01               	movlw	1
   280   000E1C  6E02               	movwf	(delay_ms@ms+1)^0,c
   281   000E1E  0EF4               	movlw	244
   282   000E20  6E01               	movwf	delay_ms@ms^0,c
   283   000E22  ECC0  F006         	call	_delay_ms	;wreg free
   284   000E26  EFF8  F006         	goto	l1146
   285   000E2A  EFFE  F03F         	goto	start
   286   000E2E                     __end_of_main:
   287                           	callstack 0
   288                           
   289 ;; *************** function _delay_ms *****************
   290 ;; Defined at:
   291 ;;		line 24 in file "src/main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;  ms              2    0[COMRAM] unsigned int 
   294 ;; Auto vars:     Size  Location     Type
   295 ;;  j               2    2[COMRAM] volatile unsigned int 
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2, status,0
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   305 ;;      Params:         2       0       0       0       0       0       0       0       0
   306 ;;      Locals:         2       0       0       0       0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0       0       0
   308 ;;      Totals:         4       0       0       0       0       0       0       0       0
   309 ;;Total ram usage:        4 bytes
   310 ;; Hardware stack levels used: 1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319   000D80                     __ptext1:
   320                           	callstack 0
   321   000D80                     _delay_ms:
   322                           	callstack 30
   323   000D80                     l1020:
   324                           
   325                           ;src/main.c: 25:     while (ms--) {
   326   000D80  EFE1  F006         	goto	l1032
   327   000D84                     l1022:
   328                           
   329                           ;src/main.c: 26:         for (volatile unsigned int j = 0; j < 500; j++) {
   330   000D84  0E00               	movlw	0
   331   000D86  6E04               	movwf	(delay_ms@j+1)^0,c	;volatile
   332   000D88  0E00               	movlw	0
   333   000D8A  6E03               	movwf	delay_ms@j^0,c	;volatile
   334   000D8C  0EF4               	movlw	244
   335   000D8E  5C03               	subwf	delay_ms@j^0,w,c	;volatile
   336   000D90  0E01               	movlw	1
   337   000D92  5804               	subwfb	(delay_ms@j+1)^0,w,c	;volatile
   338   000D94  A0D8               	btfss	status,0,c
   339   000D96  EFCF  F006         	goto	u461
   340   000D9A  EFD1  F006         	goto	u460
   341   000D9E                     u461:
   342   000D9E  EFD3  F006         	goto	l13
   343   000DA2                     u460:
   344   000DA2  EFC0  F006         	goto	l1020
   345   000DA6                     l13:
   346   000DA6  0000               	nop		;# 
   347   000DA8                     
   348                           ;src/main.c: 28:         }
   349   000DA8  4A03               	infsnz	delay_ms@j^0,f,c	;volatile
   350   000DAA  2A04               	incf	(delay_ms@j+1)^0,f,c	;volatile
   351   000DAC  0EF4               	movlw	244
   352   000DAE  5C03               	subwf	delay_ms@j^0,w,c	;volatile
   353   000DB0  0E01               	movlw	1
   354   000DB2  5804               	subwfb	(delay_ms@j+1)^0,w,c	;volatile
   355   000DB4  A0D8               	btfss	status,0,c
   356   000DB6  EFDF  F006         	goto	u471
   357   000DBA  EFE1  F006         	goto	u470
   358   000DBE                     u471:
   359   000DBE  EFD3  F006         	goto	l13
   360   000DC2                     u470:
   361   000DC2                     l1032:
   362                           
   363                           ;src/main.c: 25:     while (ms--) {
   364   000DC2  0601               	decf	delay_ms@ms^0,f,c
   365   000DC4  A0D8               	btfss	status,0,c
   366   000DC6  0602               	decf	(delay_ms@ms+1)^0,f,c
   367   000DC8  2801               	incf	delay_ms@ms^0,w,c
   368   000DCA  E106               	bnz	u481
   369   000DCC  2802               	incf	(delay_ms@ms+1)^0,w,c
   370   000DCE  A4D8               	btfss	status,2,c
   371   000DD0  EFEC  F006         	goto	u481
   372   000DD4  EFEE  F006         	goto	u480
   373   000DD8                     u481:
   374   000DD8  EFC2  F006         	goto	l1022
   375   000DDC                     u480:
   376   000DDC  0012               	return		;funcret
   377   000DDE                     __end_of_delay_ms:
   378                           	callstack 0
   379                           
   380 ;; *************** function _GPIO_Write *****************
   381 ;; Defined at:
   382 ;;		line 39 in file "src/gpio.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  port            1    wreg     unsigned char 
   385 ;;  pin             1   10[COMRAM] unsigned char 
   386 ;;  value           1   11[COMRAM] unsigned char 
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  port            1   15[COMRAM] unsigned char 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   398 ;;      Params:         2       0       0       0       0       0       0       0       0
   399 ;;      Locals:         7       0       0       0       0       0       0       0       0
   400 ;;      Temps:          3       0       0       0       0       0       0       0       0
   401 ;;      Totals:        12       0       0       0       0       0       0       0       0
   402 ;;Total ram usage:       12 bytes
   403 ;; Hardware stack levels used: 1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text2
   412   000AA8                     __ptext2:
   413                           	callstack 0
   414   000AA8                     _GPIO_Write:
   415                           	callstack 30
   416                           
   417                           ;incstack = 0
   418                           ;GPIO_Write@port stored from wreg
   419   000AA8  6E10               	movwf	GPIO_Write@port^0,c
   420   000AAA                     
   421                           ;src/gpio.c: 40:     if (pin > 7) return;
   422   000AAA  0E07               	movlw	7
   423   000AAC  640B               	cpfsgt	GPIO_Write@pin^0,c
   424   000AAE  EF5B  F005         	goto	u721
   425   000AB2  EF5D  F005         	goto	u720
   426   000AB6                     u721:
   427   000AB6  EF5F  F005         	goto	l51
   428   000ABA                     u720:
   429   000ABA  EF0B  F006         	goto	l52
   430   000ABE                     l51:
   431                           
   432                           ;src/gpio.c: 42:     (*(volatile INTCON_t*) 0xFF2).GIE = 0;
   433   000ABE  9EF2               	bcf	242,7,c	;volatile
   434                           
   435                           ;src/gpio.c: 44:     switch (port) {
   436   000AC0  EFFB  F005         	goto	l1140
   437   000AC4                     l1114:
   438                           
   439                           ;src/gpio.c: 46:             (*(volatile PORTA_t*) 0xF82).value = (value) ? ((*(volatile
      +                           PORTA_t*) 0xF82).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF82).value & (
      +                          uint8_t)~(1 << pin));
   440   000AC4  500C               	movf	GPIO_Write@value^0,w,c
   441   000AC6  A4D8               	btfss	status,2,c
   442   000AC8  EF68  F005         	goto	u731
   443   000ACC  EF6A  F005         	goto	u730
   444   000AD0                     u731:
   445   000AD0  EF7F  F005         	goto	l1118
   446   000AD4                     u730:
   447   000AD4  C00B  F00D         	movff	GPIO_Write@pin,??_GPIO_Write
   448   000AD8  0E01               	movlw	1
   449   000ADA  6E0E               	movwf	(??_GPIO_Write+1)^0,c
   450   000ADC  2A0D               	incf	??_GPIO_Write^0,f,c
   451   000ADE  EF73  F005         	goto	u744
   452   000AE2                     u745:
   453   000AE2  90D8               	bcf	status,0,c
   454   000AE4  360E               	rlcf	(??_GPIO_Write+1)^0,f,c
   455   000AE6                     u744:
   456   000AE6  2E0D               	decfsz	??_GPIO_Write^0,f,c
   457   000AE8  EF71  F005         	goto	u745
   458   000AEC  500E               	movf	(??_GPIO_Write+1)^0,w,c
   459   000AEE  0AFF               	xorlw	255
   460   000AF0  1482               	andwf	130,w,c	;volatile
   461   000AF2  6E0F               	movwf	(??_GPIO_Write+2)^0,c
   462   000AF4  500F               	movf	(??_GPIO_Write+2)^0,w,c
   463   000AF6  6E11               	movwf	_GPIO_Write$99^0,c
   464   000AF8  6A12               	clrf	(_GPIO_Write$99+1)^0,c
   465   000AFA  EF91  F005         	goto	l1120
   466   000AFE                     l1118:
   467   000AFE  C00B  F00D         	movff	GPIO_Write@pin,??_GPIO_Write
   468   000B02  0E01               	movlw	1
   469   000B04  6E0E               	movwf	(??_GPIO_Write+1)^0,c
   470   000B06  2A0D               	incf	??_GPIO_Write^0,f,c
   471   000B08  EF88  F005         	goto	u754
   472   000B0C                     u755:
   473   000B0C  90D8               	bcf	status,0,c
   474   000B0E  360E               	rlcf	(??_GPIO_Write+1)^0,f,c
   475   000B10                     u754:
   476   000B10  2E0D               	decfsz	??_GPIO_Write^0,f,c
   477   000B12  EF86  F005         	goto	u755
   478   000B16  500E               	movf	(??_GPIO_Write+1)^0,w,c
   479   000B18  1082               	iorwf	130,w,c	;volatile
   480   000B1A  6E0F               	movwf	(??_GPIO_Write+2)^0,c
   481   000B1C  500F               	movf	(??_GPIO_Write+2)^0,w,c
   482   000B1E  6E11               	movwf	_GPIO_Write$99^0,c
   483   000B20  6A12               	clrf	(_GPIO_Write$99+1)^0,c
   484   000B22                     l1120:
   485   000B22  C011  FF82         	movff	_GPIO_Write$99,3970	;volatile
   486                           
   487                           ;src/gpio.c: 47:             break;
   488   000B26  EF0A  F006         	goto	l59
   489   000B2A                     l1122:
   490                           
   491                           ;src/gpio.c: 49:             (*(volatile PORTA_t*) 0xF83).value = (value) ? ((*(volatile
      +                           PORTA_t*) 0xF83).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF83).value & (
      +                          uint8_t)~(1 << pin));
   492   000B2A  500C               	movf	GPIO_Write@value^0,w,c
   493   000B2C  A4D8               	btfss	status,2,c
   494   000B2E  EF9B  F005         	goto	u761
   495   000B32  EF9D  F005         	goto	u760
   496   000B36                     u761:
   497   000B36  EFB2  F005         	goto	l1126
   498   000B3A                     u760:
   499   000B3A  C00B  F00D         	movff	GPIO_Write@pin,??_GPIO_Write
   500   000B3E  0E01               	movlw	1
   501   000B40  6E0E               	movwf	(??_GPIO_Write+1)^0,c
   502   000B42  2A0D               	incf	??_GPIO_Write^0,f,c
   503   000B44  EFA6  F005         	goto	u774
   504   000B48                     u775:
   505   000B48  90D8               	bcf	status,0,c
   506   000B4A  360E               	rlcf	(??_GPIO_Write+1)^0,f,c
   507   000B4C                     u774:
   508   000B4C  2E0D               	decfsz	??_GPIO_Write^0,f,c
   509   000B4E  EFA4  F005         	goto	u775
   510   000B52  500E               	movf	(??_GPIO_Write+1)^0,w,c
   511   000B54  0AFF               	xorlw	255
   512   000B56  1483               	andwf	131,w,c	;volatile
   513   000B58  6E0F               	movwf	(??_GPIO_Write+2)^0,c
   514   000B5A  500F               	movf	(??_GPIO_Write+2)^0,w,c
   515   000B5C  6E13               	movwf	_GPIO_Write$100^0,c
   516   000B5E  6A14               	clrf	(_GPIO_Write$100+1)^0,c
   517   000B60  EFC4  F005         	goto	l1128
   518   000B64                     l1126:
   519   000B64  C00B  F00D         	movff	GPIO_Write@pin,??_GPIO_Write
   520   000B68  0E01               	movlw	1
   521   000B6A  6E0E               	movwf	(??_GPIO_Write+1)^0,c
   522   000B6C  2A0D               	incf	??_GPIO_Write^0,f,c
   523   000B6E  EFBB  F005         	goto	u784
   524   000B72                     u785:
   525   000B72  90D8               	bcf	status,0,c
   526   000B74  360E               	rlcf	(??_GPIO_Write+1)^0,f,c
   527   000B76                     u784:
   528   000B76  2E0D               	decfsz	??_GPIO_Write^0,f,c
   529   000B78  EFB9  F005         	goto	u785
   530   000B7C  500E               	movf	(??_GPIO_Write+1)^0,w,c
   531   000B7E  1083               	iorwf	131,w,c	;volatile
   532   000B80  6E0F               	movwf	(??_GPIO_Write+2)^0,c
   533   000B82  500F               	movf	(??_GPIO_Write+2)^0,w,c
   534   000B84  6E13               	movwf	_GPIO_Write$100^0,c
   535   000B86  6A14               	clrf	(_GPIO_Write$100+1)^0,c
   536   000B88                     l1128:
   537   000B88  C013  FF83         	movff	_GPIO_Write$100,3971	;volatile
   538                           
   539                           ;src/gpio.c: 50:             break;
   540   000B8C  EF0A  F006         	goto	l59
   541   000B90                     l1130:
   542                           
   543                           ;src/gpio.c: 52:             (*(volatile PORTA_t*) 0xF84).value = (value) ? ((*(volatile
      +                           PORTA_t*) 0xF84).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF84).value & (
      +                          uint8_t)~(1 << pin));
   544   000B90  500C               	movf	GPIO_Write@value^0,w,c
   545   000B92  A4D8               	btfss	status,2,c
   546   000B94  EFCE  F005         	goto	u791
   547   000B98  EFD0  F005         	goto	u790
   548   000B9C                     u791:
   549   000B9C  EFE5  F005         	goto	l1134
   550   000BA0                     u790:
   551   000BA0  C00B  F00D         	movff	GPIO_Write@pin,??_GPIO_Write
   552   000BA4  0E01               	movlw	1
   553   000BA6  6E0E               	movwf	(??_GPIO_Write+1)^0,c
   554   000BA8  2A0D               	incf	??_GPIO_Write^0,f,c
   555   000BAA  EFD9  F005         	goto	u804
   556   000BAE                     u805:
   557   000BAE  90D8               	bcf	status,0,c
   558   000BB0  360E               	rlcf	(??_GPIO_Write+1)^0,f,c
   559   000BB2                     u804:
   560   000BB2  2E0D               	decfsz	??_GPIO_Write^0,f,c
   561   000BB4  EFD7  F005         	goto	u805
   562   000BB8  500E               	movf	(??_GPIO_Write+1)^0,w,c
   563   000BBA  0AFF               	xorlw	255
   564   000BBC  1484               	andwf	132,w,c	;volatile
   565   000BBE  6E0F               	movwf	(??_GPIO_Write+2)^0,c
   566   000BC0  500F               	movf	(??_GPIO_Write+2)^0,w,c
   567   000BC2  6E15               	movwf	_GPIO_Write$101^0,c
   568   000BC4  6A16               	clrf	(_GPIO_Write$101+1)^0,c
   569   000BC6  EFF7  F005         	goto	l1136
   570   000BCA                     l1134:
   571   000BCA  C00B  F00D         	movff	GPIO_Write@pin,??_GPIO_Write
   572   000BCE  0E01               	movlw	1
   573   000BD0  6E0E               	movwf	(??_GPIO_Write+1)^0,c
   574   000BD2  2A0D               	incf	??_GPIO_Write^0,f,c
   575   000BD4  EFEE  F005         	goto	u814
   576   000BD8                     u815:
   577   000BD8  90D8               	bcf	status,0,c
   578   000BDA  360E               	rlcf	(??_GPIO_Write+1)^0,f,c
   579   000BDC                     u814:
   580   000BDC  2E0D               	decfsz	??_GPIO_Write^0,f,c
   581   000BDE  EFEC  F005         	goto	u815
   582   000BE2  500E               	movf	(??_GPIO_Write+1)^0,w,c
   583   000BE4  1084               	iorwf	132,w,c	;volatile
   584   000BE6  6E0F               	movwf	(??_GPIO_Write+2)^0,c
   585   000BE8  500F               	movf	(??_GPIO_Write+2)^0,w,c
   586   000BEA  6E15               	movwf	_GPIO_Write$101^0,c
   587   000BEC  6A16               	clrf	(_GPIO_Write$101+1)^0,c
   588   000BEE                     l1136:
   589   000BEE  C015  FF84         	movff	_GPIO_Write$101,3972	;volatile
   590                           
   591                           ;src/gpio.c: 53:             break;
   592   000BF2  EF0A  F006         	goto	l59
   593   000BF6                     l1140:
   594   000BF6  5010               	movf	GPIO_Write@port^0,w,c
   595                           
   596                           ; Switch size 1, requested type "simple"
   597                           ; Number of cases is 3, Range of values is 0 to 2
   598                           ; switch strategies available:
   599                           ; Name         Instructions Cycles
   600                           ; simple_byte           10     6 (average)
   601                           ;	Chosen strategy is simple_byte
   602   000BF8  0A00               	xorlw	0	; case 0
   603   000BFA  B4D8               	btfsc	status,2,c
   604   000BFC  EF62  F005         	goto	l1114
   605   000C00  0A01               	xorlw	1	; case 1
   606   000C02  B4D8               	btfsc	status,2,c
   607   000C04  EF95  F005         	goto	l1122
   608   000C08  0A03               	xorlw	3	; case 2
   609   000C0A  B4D8               	btfsc	status,2,c
   610   000C0C  EFC8  F005         	goto	l1130
   611   000C10  EF0A  F006         	goto	l59
   612   000C14                     l59:
   613                           
   614                           ;src/gpio.c: 56:     (*(volatile INTCON_t*) 0xFF2).GIE = 1;
   615   000C14  8EF2               	bsf	242,7,c	;volatile
   616   000C16                     l52:
   617   000C16  0012               	return		;funcret
   618   000C18                     __end_of_GPIO_Write:
   619                           	callstack 0
   620                           
   621 ;; *************** function _GPIO_SetDirection *****************
   622 ;; Defined at:
   623 ;;		line 23 in file "src/gpio.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  port            1    wreg     unsigned char 
   626 ;;  pin             1    0[COMRAM] unsigned char 
   627 ;;  direction       1    1[COMRAM] enum E87
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  port            1    5[COMRAM] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   639 ;;      Params:         2       0       0       0       0       0       0       0       0
   640 ;;      Locals:         7       0       0       0       0       0       0       0       0
   641 ;;      Temps:          3       0       0       0       0       0       0       0       0
   642 ;;      Totals:        12       0       0       0       0       0       0       0       0
   643 ;;Total ram usage:       12 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text3
   653   000C18                     __ptext3:
   654                           	callstack 0
   655   000C18                     _GPIO_SetDirection:
   656                           	callstack 30
   657                           
   658                           ;incstack = 0
   659                           ;GPIO_SetDirection@port stored from wreg
   660   000C18  6E06               	movwf	GPIO_SetDirection@port^0,c
   661   000C1A                     
   662                           ;src/gpio.c: 24:     if (pin > 7) return;
   663   000C1A  0E07               	movlw	7
   664   000C1C  6401               	cpfsgt	GPIO_SetDirection@pin^0,c
   665   000C1E  EF13  F006         	goto	u491
   666   000C22  EF15  F006         	goto	u490
   667   000C26                     u491:
   668   000C26  EFB0  F006         	goto	l1064
   669   000C2A                     u490:
   670   000C2A  EFBF  F006         	goto	l31
   671   000C2E                     l1038:
   672                           
   673                           ;src/gpio.c: 28:             (*(volatile PORTA_t*) 0xF87).value = (direction) ? ((*(vola
      +                          tile PORTA_t*) 0xF87).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF87).value
      +                           & (uint8_t)~(1 << pin));
   674   000C2E  5002               	movf	GPIO_SetDirection@direction^0,w,c
   675   000C30  A4D8               	btfss	status,2,c
   676   000C32  EF1D  F006         	goto	u501
   677   000C36  EF1F  F006         	goto	u500
   678   000C3A                     u501:
   679   000C3A  EF34  F006         	goto	l1042
   680   000C3E                     u500:
   681   000C3E  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   682   000C42  0E01               	movlw	1
   683   000C44  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   684   000C46  2A03               	incf	??_GPIO_SetDirection^0,f,c
   685   000C48  EF28  F006         	goto	u514
   686   000C4C                     u515:
   687   000C4C  90D8               	bcf	status,0,c
   688   000C4E  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   689   000C50                     u514:
   690   000C50  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   691   000C52  EF26  F006         	goto	u515
   692   000C56  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   693   000C58  0AFF               	xorlw	255
   694   000C5A  1487               	andwf	135,w,c	;volatile
   695   000C5C  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   696   000C5E  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   697   000C60  6E07               	movwf	_GPIO_SetDirection$92^0,c
   698   000C62  6A08               	clrf	(_GPIO_SetDirection$92+1)^0,c
   699   000C64  EF46  F006         	goto	l1044
   700   000C68                     l1042:
   701   000C68  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   702   000C6C  0E01               	movlw	1
   703   000C6E  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   704   000C70  2A03               	incf	??_GPIO_SetDirection^0,f,c
   705   000C72  EF3D  F006         	goto	u524
   706   000C76                     u525:
   707   000C76  90D8               	bcf	status,0,c
   708   000C78  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   709   000C7A                     u524:
   710   000C7A  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   711   000C7C  EF3B  F006         	goto	u525
   712   000C80  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   713   000C82  1087               	iorwf	135,w,c	;volatile
   714   000C84  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   715   000C86  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   716   000C88  6E07               	movwf	_GPIO_SetDirection$92^0,c
   717   000C8A  6A08               	clrf	(_GPIO_SetDirection$92+1)^0,c
   718   000C8C                     l1044:
   719   000C8C  C007  FF87         	movff	_GPIO_SetDirection$92,3975	;volatile
   720                           
   721                           ;src/gpio.c: 29:             break;
   722   000C90  EFBF  F006         	goto	l31
   723   000C94                     l1046:
   724                           
   725                           ;src/gpio.c: 31:             (*(volatile PORTA_t*) 0xF88).value = (direction) ? ((*(vola
      +                          tile PORTA_t*) 0xF88).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF88).value
      +                           & (uint8_t)~(1 << pin));
   726   000C94  5002               	movf	GPIO_SetDirection@direction^0,w,c
   727   000C96  A4D8               	btfss	status,2,c
   728   000C98  EF50  F006         	goto	u531
   729   000C9C  EF52  F006         	goto	u530
   730   000CA0                     u531:
   731   000CA0  EF67  F006         	goto	l1050
   732   000CA4                     u530:
   733   000CA4  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   734   000CA8  0E01               	movlw	1
   735   000CAA  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   736   000CAC  2A03               	incf	??_GPIO_SetDirection^0,f,c
   737   000CAE  EF5B  F006         	goto	u544
   738   000CB2                     u545:
   739   000CB2  90D8               	bcf	status,0,c
   740   000CB4  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   741   000CB6                     u544:
   742   000CB6  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   743   000CB8  EF59  F006         	goto	u545
   744   000CBC  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   745   000CBE  0AFF               	xorlw	255
   746   000CC0  1488               	andwf	136,w,c	;volatile
   747   000CC2  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   748   000CC4  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   749   000CC6  6E09               	movwf	_GPIO_SetDirection$93^0,c
   750   000CC8  6A0A               	clrf	(_GPIO_SetDirection$93+1)^0,c
   751   000CCA  EF79  F006         	goto	l1052
   752   000CCE                     l1050:
   753   000CCE  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   754   000CD2  0E01               	movlw	1
   755   000CD4  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   756   000CD6  2A03               	incf	??_GPIO_SetDirection^0,f,c
   757   000CD8  EF70  F006         	goto	u554
   758   000CDC                     u555:
   759   000CDC  90D8               	bcf	status,0,c
   760   000CDE  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   761   000CE0                     u554:
   762   000CE0  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   763   000CE2  EF6E  F006         	goto	u555
   764   000CE6  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   765   000CE8  1088               	iorwf	136,w,c	;volatile
   766   000CEA  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   767   000CEC  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   768   000CEE  6E09               	movwf	_GPIO_SetDirection$93^0,c
   769   000CF0  6A0A               	clrf	(_GPIO_SetDirection$93+1)^0,c
   770   000CF2                     l1052:
   771   000CF2  C009  FF88         	movff	_GPIO_SetDirection$93,3976	;volatile
   772                           
   773                           ;src/gpio.c: 32:             break;
   774   000CF6  EFBF  F006         	goto	l31
   775   000CFA                     l1054:
   776                           
   777                           ;src/gpio.c: 34:             (*(volatile PORTA_t*) 0xF89).value = (direction) ? ((*(vola
      +                          tile PORTA_t*) 0xF89).value | (uint8_t)(1 << pin)) : ((*(volatile PORTA_t*) 0xF89).value
      +                           & (uint8_t)~(1 << pin));
   778   000CFA  5002               	movf	GPIO_SetDirection@direction^0,w,c
   779   000CFC  A4D8               	btfss	status,2,c
   780   000CFE  EF83  F006         	goto	u561
   781   000D02  EF85  F006         	goto	u560
   782   000D06                     u561:
   783   000D06  EF9A  F006         	goto	l1058
   784   000D0A                     u560:
   785   000D0A  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   786   000D0E  0E01               	movlw	1
   787   000D10  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   788   000D12  2A03               	incf	??_GPIO_SetDirection^0,f,c
   789   000D14  EF8E  F006         	goto	u574
   790   000D18                     u575:
   791   000D18  90D8               	bcf	status,0,c
   792   000D1A  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   793   000D1C                     u574:
   794   000D1C  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   795   000D1E  EF8C  F006         	goto	u575
   796   000D22  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   797   000D24  0AFF               	xorlw	255
   798   000D26  1489               	andwf	137,w,c	;volatile
   799   000D28  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   800   000D2A  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   801   000D2C  6E0B               	movwf	_GPIO_SetDirection$94^0,c
   802   000D2E  6A0C               	clrf	(_GPIO_SetDirection$94+1)^0,c
   803   000D30  EFAC  F006         	goto	l1060
   804   000D34                     l1058:
   805   000D34  C001  F003         	movff	GPIO_SetDirection@pin,??_GPIO_SetDirection
   806   000D38  0E01               	movlw	1
   807   000D3A  6E04               	movwf	(??_GPIO_SetDirection+1)^0,c
   808   000D3C  2A03               	incf	??_GPIO_SetDirection^0,f,c
   809   000D3E  EFA3  F006         	goto	u584
   810   000D42                     u585:
   811   000D42  90D8               	bcf	status,0,c
   812   000D44  3604               	rlcf	(??_GPIO_SetDirection+1)^0,f,c
   813   000D46                     u584:
   814   000D46  2E03               	decfsz	??_GPIO_SetDirection^0,f,c
   815   000D48  EFA1  F006         	goto	u585
   816   000D4C  5004               	movf	(??_GPIO_SetDirection+1)^0,w,c
   817   000D4E  1089               	iorwf	137,w,c	;volatile
   818   000D50  6E05               	movwf	(??_GPIO_SetDirection+2)^0,c
   819   000D52  5005               	movf	(??_GPIO_SetDirection+2)^0,w,c
   820   000D54  6E0B               	movwf	_GPIO_SetDirection$94^0,c
   821   000D56  6A0C               	clrf	(_GPIO_SetDirection$94+1)^0,c
   822   000D58                     l1060:
   823   000D58  C00B  FF89         	movff	_GPIO_SetDirection$94,3977	;volatile
   824                           
   825                           ;src/gpio.c: 35:             break;
   826   000D5C  EFBF  F006         	goto	l31
   827   000D60                     l1064:
   828   000D60  5006               	movf	GPIO_SetDirection@port^0,w,c
   829                           
   830                           ; Switch size 1, requested type "simple"
   831                           ; Number of cases is 3, Range of values is 0 to 2
   832                           ; switch strategies available:
   833                           ; Name         Instructions Cycles
   834                           ; simple_byte           10     6 (average)
   835                           ;	Chosen strategy is simple_byte
   836   000D62  0A00               	xorlw	0	; case 0
   837   000D64  B4D8               	btfsc	status,2,c
   838   000D66  EF17  F006         	goto	l1038
   839   000D6A  0A01               	xorlw	1	; case 1
   840   000D6C  B4D8               	btfsc	status,2,c
   841   000D6E  EF4A  F006         	goto	l1046
   842   000D72  0A03               	xorlw	3	; case 2
   843   000D74  B4D8               	btfsc	status,2,c
   844   000D76  EF7D  F006         	goto	l1054
   845   000D7A  EFBF  F006         	goto	l31
   846   000D7E                     l31:
   847   000D7E  0012               	return		;funcret
   848   000D80                     __end_of_GPIO_SetDirection:
   849                           	callstack 0
   850                           
   851 ;; *************** function _GPIO_Read *****************
   852 ;; Defined at:
   853 ;;		line 59 in file "src/gpio.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  port            1    wreg     unsigned char 
   856 ;;  pin             1    0[COMRAM] unsigned char 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  port            1    3[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      unsigned char 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   868 ;;      Params:         1       0       0       0       0       0       0       0       0
   869 ;;      Locals:         7       0       0       0       0       0       0       0       0
   870 ;;      Temps:          2       0       0       0       0       0       0       0       0
   871 ;;      Totals:        10       0       0       0       0       0       0       0       0
   872 ;;Total ram usage:       10 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_main
   878 ;;		_GPIO_ReadDebounced
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text4
   883   000902                     __ptext4:
   884                           	callstack 0
   885   000902                     _GPIO_Read:
   886                           	callstack 30
   887                           
   888                           ;incstack = 0
   889                           ;GPIO_Read@port stored from wreg
   890   000902  6E04               	movwf	GPIO_Read@port^0,c
   891   000904                     
   892                           ;src/gpio.c: 60:     if (pin > 7) return 0;
   893   000904  0E07               	movlw	7
   894   000906  6401               	cpfsgt	GPIO_Read@pin^0,c
   895   000908  EF88  F004         	goto	u591
   896   00090C  EF8A  F004         	goto	u590
   897   000910                     u591:
   898   000910  EF44  F005         	goto	l1108
   899   000914                     u590:
   900   000914                     l1068:
   901   000914  0E00               	movlw	0
   902   000916  EF53  F005         	goto	l73
   903   00091A                     l1072:
   904                           
   905                           ;src/gpio.c: 64:             return ((*(volatile PORTA_t*) 0xF87).value & (1 << pin)) ? 
      +                          (((*(volatile PORTA_t*) 0xF8C).value >> pin) & 0x01) : (((*(volatile PORTA_t*) 0xF82).va
      +                          lue >> pin) & 0x01);
   906   00091A  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
   907   00091E  0E01               	movlw	1
   908   000920  6E03               	movwf	(??_GPIO_Read+1)^0,c
   909   000922  2A02               	incf	??_GPIO_Read^0,f,c
   910   000924  EF96  F004         	goto	u604
   911   000928                     u605:
   912   000928  90D8               	bcf	status,0,c
   913   00092A  3603               	rlcf	(??_GPIO_Read+1)^0,f,c
   914   00092C                     u604:
   915   00092C  2E02               	decfsz	??_GPIO_Read^0,f,c
   916   00092E  EF94  F004         	goto	u605
   917   000932  5003               	movf	(??_GPIO_Read+1)^0,w,c
   918   000934  1487               	andwf	135,w,c	;volatile
   919   000936  0900               	iorlw	0
   920   000938  A4D8               	btfss	status,2,c
   921   00093A  EFA1  F004         	goto	u611
   922   00093E  EFA3  F004         	goto	u610
   923   000942                     u611:
   924   000942  EFB6  F004         	goto	l1076
   925   000946                     u610:
   926   000946  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
   927   00094A  CF82 F003          	movff	3970,??_GPIO_Read+1	;volatile
   928   00094E  2A02               	incf	??_GPIO_Read^0,f,c
   929   000950  EFAC  F004         	goto	u624
   930   000954                     u625:
   931   000954  90D8               	bcf	status,0,c
   932   000956  3203               	rrcf	(??_GPIO_Read+1)^0,f,c
   933   000958                     u624:
   934   000958  2E02               	decfsz	??_GPIO_Read^0,f,c
   935   00095A  EFAA  F004         	goto	u625
   936   00095E  0E01               	movlw	1
   937   000960  1603               	andwf	(??_GPIO_Read+1)^0,f,c
   938   000962  5003               	movf	(??_GPIO_Read+1)^0,w,c
   939   000964  6E05               	movwf	_GPIO_Read$105^0,c
   940   000966  6A06               	clrf	(_GPIO_Read$105+1)^0,c
   941   000968  EFC7  F004         	goto	l1078
   942   00096C                     l1076:
   943   00096C  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
   944   000970  CF8C F003          	movff	3980,??_GPIO_Read+1	;volatile
   945   000974  2A02               	incf	??_GPIO_Read^0,f,c
   946   000976  EFBF  F004         	goto	u634
   947   00097A                     u635:
   948   00097A  90D8               	bcf	status,0,c
   949   00097C  3203               	rrcf	(??_GPIO_Read+1)^0,f,c
   950   00097E                     u634:
   951   00097E  2E02               	decfsz	??_GPIO_Read^0,f,c
   952   000980  EFBD  F004         	goto	u635
   953   000984  0E01               	movlw	1
   954   000986  1603               	andwf	(??_GPIO_Read+1)^0,f,c
   955   000988  5003               	movf	(??_GPIO_Read+1)^0,w,c
   956   00098A  6E05               	movwf	_GPIO_Read$105^0,c
   957   00098C  6A06               	clrf	(_GPIO_Read$105+1)^0,c
   958   00098E                     l1078:
   959   00098E  5005               	movf	_GPIO_Read$105^0,w,c
   960   000990  EF53  F005         	goto	l73
   961   000994                     l1082:
   962                           
   963                           ;src/gpio.c: 66:             return ((*(volatile PORTA_t*) 0xF88).value & (1 << pin)) ? 
      +                          (((*(volatile PORTA_t*) 0xF8D).value >> pin) & 0x01) : (((*(volatile PORTA_t*) 0xF83).va
      +                          lue >> pin) & 0x01);
   964   000994  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
   965   000998  0E01               	movlw	1
   966   00099A  6E03               	movwf	(??_GPIO_Read+1)^0,c
   967   00099C  2A02               	incf	??_GPIO_Read^0,f,c
   968   00099E  EFD3  F004         	goto	u644
   969   0009A2                     u645:
   970   0009A2  90D8               	bcf	status,0,c
   971   0009A4  3603               	rlcf	(??_GPIO_Read+1)^0,f,c
   972   0009A6                     u644:
   973   0009A6  2E02               	decfsz	??_GPIO_Read^0,f,c
   974   0009A8  EFD1  F004         	goto	u645
   975   0009AC  5003               	movf	(??_GPIO_Read+1)^0,w,c
   976   0009AE  1488               	andwf	136,w,c	;volatile
   977   0009B0  0900               	iorlw	0
   978   0009B2  A4D8               	btfss	status,2,c
   979   0009B4  EFDE  F004         	goto	u651
   980   0009B8  EFE0  F004         	goto	u650
   981   0009BC                     u651:
   982   0009BC  EFF3  F004         	goto	l1086
   983   0009C0                     u650:
   984   0009C0  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
   985   0009C4  CF83 F003          	movff	3971,??_GPIO_Read+1	;volatile
   986   0009C8  2A02               	incf	??_GPIO_Read^0,f,c
   987   0009CA  EFE9  F004         	goto	u664
   988   0009CE                     u665:
   989   0009CE  90D8               	bcf	status,0,c
   990   0009D0  3203               	rrcf	(??_GPIO_Read+1)^0,f,c
   991   0009D2                     u664:
   992   0009D2  2E02               	decfsz	??_GPIO_Read^0,f,c
   993   0009D4  EFE7  F004         	goto	u665
   994   0009D8  0E01               	movlw	1
   995   0009DA  1603               	andwf	(??_GPIO_Read+1)^0,f,c
   996   0009DC  5003               	movf	(??_GPIO_Read+1)^0,w,c
   997   0009DE  6E07               	movwf	_GPIO_Read$106^0,c
   998   0009E0  6A08               	clrf	(_GPIO_Read$106+1)^0,c
   999   0009E2  EF04  F005         	goto	l1088
  1000   0009E6                     l1086:
  1001   0009E6  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
  1002   0009EA  CF8D F003          	movff	3981,??_GPIO_Read+1	;volatile
  1003   0009EE  2A02               	incf	??_GPIO_Read^0,f,c
  1004   0009F0  EFFC  F004         	goto	u674
  1005   0009F4                     u675:
  1006   0009F4  90D8               	bcf	status,0,c
  1007   0009F6  3203               	rrcf	(??_GPIO_Read+1)^0,f,c
  1008   0009F8                     u674:
  1009   0009F8  2E02               	decfsz	??_GPIO_Read^0,f,c
  1010   0009FA  EFFA  F004         	goto	u675
  1011   0009FE  0E01               	movlw	1
  1012   000A00  1603               	andwf	(??_GPIO_Read+1)^0,f,c
  1013   000A02  5003               	movf	(??_GPIO_Read+1)^0,w,c
  1014   000A04  6E07               	movwf	_GPIO_Read$106^0,c
  1015   000A06  6A08               	clrf	(_GPIO_Read$106+1)^0,c
  1016   000A08                     l1088:
  1017   000A08  5007               	movf	_GPIO_Read$106^0,w,c
  1018   000A0A  EF53  F005         	goto	l73
  1019   000A0E                     l1092:
  1020                           
  1021                           ;src/gpio.c: 68:             return ((*(volatile PORTA_t*) 0xF89).value & (1 << pin)) ? 
      +                          (((*(volatile PORTA_t*) 0xF8E).value >> pin) & 0x01) : (((*(volatile PORTA_t*) 0xF84).va
      +                          lue >> pin) & 0x01);
  1022   000A0E  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
  1023   000A12  0E01               	movlw	1
  1024   000A14  6E03               	movwf	(??_GPIO_Read+1)^0,c
  1025   000A16  2A02               	incf	??_GPIO_Read^0,f,c
  1026   000A18  EF10  F005         	goto	u684
  1027   000A1C                     u685:
  1028   000A1C  90D8               	bcf	status,0,c
  1029   000A1E  3603               	rlcf	(??_GPIO_Read+1)^0,f,c
  1030   000A20                     u684:
  1031   000A20  2E02               	decfsz	??_GPIO_Read^0,f,c
  1032   000A22  EF0E  F005         	goto	u685
  1033   000A26  5003               	movf	(??_GPIO_Read+1)^0,w,c
  1034   000A28  1489               	andwf	137,w,c	;volatile
  1035   000A2A  0900               	iorlw	0
  1036   000A2C  A4D8               	btfss	status,2,c
  1037   000A2E  EF1B  F005         	goto	u691
  1038   000A32  EF1D  F005         	goto	u690
  1039   000A36                     u691:
  1040   000A36  EF30  F005         	goto	l1096
  1041   000A3A                     u690:
  1042   000A3A  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
  1043   000A3E  CF84 F003          	movff	3972,??_GPIO_Read+1	;volatile
  1044   000A42  2A02               	incf	??_GPIO_Read^0,f,c
  1045   000A44  EF26  F005         	goto	u704
  1046   000A48                     u705:
  1047   000A48  90D8               	bcf	status,0,c
  1048   000A4A  3203               	rrcf	(??_GPIO_Read+1)^0,f,c
  1049   000A4C                     u704:
  1050   000A4C  2E02               	decfsz	??_GPIO_Read^0,f,c
  1051   000A4E  EF24  F005         	goto	u705
  1052   000A52  0E01               	movlw	1
  1053   000A54  1603               	andwf	(??_GPIO_Read+1)^0,f,c
  1054   000A56  5003               	movf	(??_GPIO_Read+1)^0,w,c
  1055   000A58  6E09               	movwf	_GPIO_Read$107^0,c
  1056   000A5A  6A0A               	clrf	(_GPIO_Read$107+1)^0,c
  1057   000A5C  EF41  F005         	goto	l1098
  1058   000A60                     l1096:
  1059   000A60  C001  F002         	movff	GPIO_Read@pin,??_GPIO_Read
  1060   000A64  CF8E F003          	movff	3982,??_GPIO_Read+1	;volatile
  1061   000A68  2A02               	incf	??_GPIO_Read^0,f,c
  1062   000A6A  EF39  F005         	goto	u714
  1063   000A6E                     u715:
  1064   000A6E  90D8               	bcf	status,0,c
  1065   000A70  3203               	rrcf	(??_GPIO_Read+1)^0,f,c
  1066   000A72                     u714:
  1067   000A72  2E02               	decfsz	??_GPIO_Read^0,f,c
  1068   000A74  EF37  F005         	goto	u715
  1069   000A78  0E01               	movlw	1
  1070   000A7A  1603               	andwf	(??_GPIO_Read+1)^0,f,c
  1071   000A7C  5003               	movf	(??_GPIO_Read+1)^0,w,c
  1072   000A7E  6E09               	movwf	_GPIO_Read$107^0,c
  1073   000A80  6A0A               	clrf	(_GPIO_Read$107+1)^0,c
  1074   000A82                     l1098:
  1075   000A82  5009               	movf	_GPIO_Read$107^0,w,c
  1076   000A84  EF53  F005         	goto	l73
  1077   000A88                     l1108:
  1078   000A88  5004               	movf	GPIO_Read@port^0,w,c
  1079                           
  1080                           ; Switch size 1, requested type "simple"
  1081                           ; Number of cases is 3, Range of values is 0 to 2
  1082                           ; switch strategies available:
  1083                           ; Name         Instructions Cycles
  1084                           ; simple_byte           10     6 (average)
  1085                           ;	Chosen strategy is simple_byte
  1086   000A8A  0A00               	xorlw	0	; case 0
  1087   000A8C  B4D8               	btfsc	status,2,c
  1088   000A8E  EF8D  F004         	goto	l1072
  1089   000A92  0A01               	xorlw	1	; case 1
  1090   000A94  B4D8               	btfsc	status,2,c
  1091   000A96  EFCA  F004         	goto	l1082
  1092   000A9A  0A03               	xorlw	3	; case 2
  1093   000A9C  B4D8               	btfsc	status,2,c
  1094   000A9E  EF07  F005         	goto	l1092
  1095   000AA2  EF8A  F004         	goto	l1068
  1096   000AA6                     l73:
  1097   000AA6  0012               	return		;funcret
  1098   000AA8                     __end_of_GPIO_Read:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _GPIO_Init *****************
  1102 ;; Defined at:
  1103 ;;		line 13 in file "src/gpio.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		None
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        0 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text5
  1131   000E2E                     __ptext5:
  1132                           	callstack 0
  1133   000E2E                     _GPIO_Init:
  1134                           	callstack 30
  1135   000E2E                     
  1136                           ;src/gpio.c: 14:     (*(volatile PORTA_t*) 0xF87).value = 0b00000000;
  1137   000E2E  6A87               	clrf	135,c	;volatile
  1138                           
  1139                           ;src/gpio.c: 15:     (*(volatile PORTA_t*) 0xF88).value = 0b11111111;
  1140   000E30  6888               	setf	136,c	;volatile
  1141                           
  1142                           ;src/gpio.c: 16:     (*(volatile PORTA_t*) 0xF89).value = 0b00000000;
  1143   000E32  6A89               	clrf	137,c	;volatile
  1144                           
  1145                           ;src/gpio.c: 18:     (*(volatile PORTA_t*) 0xF82).value = 0b00000000;
  1146   000E34  6A82               	clrf	130,c	;volatile
  1147                           
  1148                           ;src/gpio.c: 19:     (*(volatile PORTA_t*) 0xF83).value = 0b00000000;
  1149   000E36  6A83               	clrf	131,c	;volatile
  1150                           
  1151                           ;src/gpio.c: 20:     (*(volatile PORTA_t*) 0xF84).value = 0b00000000;
  1152   000E38  6A84               	clrf	132,c	;volatile
  1153   000E3A  0012               	return		;funcret
  1154   000E3C                     __end_of_GPIO_Init:
  1155                           	callstack 0
  1156                           
  1157                           	psect	smallconst
  1158   000900                     __psmallconst:
  1159                           	callstack 0
  1160   000900  00                 	db	0
  1161   000901  00                 	db	0	; dummy byte at the end
  1162   000900                     __smallconst    set	__psmallconst
  1163   000900                     __mediumconst   set	__psmallconst
  1164   000002                     __activetblptr  equ	2
  1165                           
  1166                           	psect	rparam
  1167   000001                     ___rparam_used  equ	1
  1168   000000                     ___param_bank   equ	0
  1169   000000                     __Lparam        equ	__Lrparam
  1170   000000                     __Hparam        equ	__Hrparam
  1171                           
  1172                           	psect	config
  1173                           
  1174                           ;Config register CONFIG1L @ 0x300000
  1175                           ;	External Oscillator mode Selection bits
  1176                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1177                           ;	Power-up default value for COSC bits
  1178                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1179   300000                     	org	3145728
  1180   300000  FA                 	db	250
  1181                           
  1182                           ;Config register CONFIG1H @ 0x300001
  1183                           ;	Clock Out Enable bit
  1184                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1185                           ;	Clock Switch Enable bit
  1186                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1187                           ;	Fail-Safe Clock Monitor Enable bit
  1188                           ;	FCMEN = 0x1, unprogrammed default
  1189   300001                     	org	3145729
  1190   300001  FF                 	db	255
  1191                           
  1192                           ;Config register CONFIG2L @ 0x300002
  1193                           ;	Master Clear Enable bit
  1194                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  1195                           ;	Power-up Timer Enable bit
  1196                           ;	PWRTE = OFF, Power up timer disabled
  1197                           ;	Low-power BOR enable bit
  1198                           ;	LPBOREN = OFF, Low power BOR is disabled
  1199                           ;	Brown-out Reset Enable bits
  1200                           ;	BOREN = ON, Brown-out Reset enabled according to SBOREN
  1201   300002                     	org	3145730
  1202   300002  7F                 	db	127
  1203                           
  1204                           ;Config register CONFIG2H @ 0x300003
  1205                           ;	Brown Out Reset Voltage selection bits
  1206                           ;	BORV = 0x3, unprogrammed default
  1207                           ;	ZCD Disable bit
  1208                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1209                           ;	PPSLOCK bit One-Way Set Enable bit
  1210                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1211                           ;	Stack Full/Underflow Reset Enable bit
  1212                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1213                           ;	Extended Instruction Set Enable bit
  1214                           ;	XINST = 0x1, unprogrammed default
  1215   300003                     	org	3145731
  1216   300003  FF                 	db	255
  1217                           
  1218                           ;Config register CONFIG3L @ 0x300004
  1219                           ;	WDT Period Select bits
  1220                           ;	WDTCPS = 0x1F, unprogrammed default
  1221                           ;	WDT operating mode
  1222                           ;	WDTE = OFF, WDT Disabled
  1223   300004                     	org	3145732
  1224   300004  9F                 	db	159
  1225                           
  1226                           ;Config register CONFIG3H @ 0x300005
  1227                           ;	unspecified, using default values
  1228                           ;	WDT Window Select bits
  1229                           ;	WDTCWS = 0x7, unprogrammed default
  1230                           ;	WDT input clock selector
  1231                           ;	WDTCCS = 0x7, unprogrammed default
  1232   300005                     	org	3145733
  1233   300005  FF                 	db	255
  1234                           
  1235                           ;Config register CONFIG4L @ 0x300006
  1236                           ;	unspecified, using default values
  1237                           ;	Write Protection Block 0
  1238                           ;	WRT0 = 0x1, unprogrammed default
  1239                           ;	Write Protection Block 1
  1240                           ;	WRT1 = 0x1, unprogrammed default
  1241                           ;	Write Protection Block 2
  1242                           ;	WRT2 = 0x1, unprogrammed default
  1243                           ;	Write Protection Block 3
  1244                           ;	WRT3 = 0x1, unprogrammed default
  1245   300006                     	org	3145734
  1246   300006  FF                 	db	255
  1247                           
  1248                           ;Config register CONFIG4H @ 0x300007
  1249                           ;	Configuration Register Write Protection bit
  1250                           ;	WRTC = 0x1, unprogrammed default
  1251                           ;	Boot Block Write Protection bit
  1252                           ;	WRTB = 0x1, unprogrammed default
  1253                           ;	Data EEPROM Write Protection bit
  1254                           ;	WRTD = 0x1, unprogrammed default
  1255                           ;	Scanner Enable bit
  1256                           ;	SCANE = 0x1, unprogrammed default
  1257                           ;	Low Voltage Programming Enable bit
  1258                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1259   300007                     	org	3145735
  1260   300007  DF                 	db	223
  1261                           tosu	equ	0xFFF
  1262                           tosh	equ	0xFFE
  1263                           tosl	equ	0xFFD
  1264                           stkptr	equ	0xFFC
  1265                           pclatu	equ	0xFFB
  1266                           pclath	equ	0xFFA
  1267                           pcl	equ	0xFF9
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           prodh	equ	0xFF4
  1273                           prodl	equ	0xFF3
  1274                           indf0	equ	0xFEF
  1275                           postinc0	equ	0xFEE
  1276                           postdec0	equ	0xFED
  1277                           preinc0	equ	0xFEC
  1278                           plusw0	equ	0xFEB
  1279                           fsr0h	equ	0xFEA
  1280                           fsr0l	equ	0xFE9
  1281                           wreg	equ	0xFE8
  1282                           indf1	equ	0xFE7
  1283                           postinc1	equ	0xFE6
  1284                           postdec1	equ	0xFE5
  1285                           preinc1	equ	0xFE4
  1286                           plusw1	equ	0xFE3
  1287                           fsr1h	equ	0xFE2
  1288                           fsr1l	equ	0xFE1
  1289                           bsr	equ	0xFE0
  1290                           indf2	equ	0xFDF
  1291                           postinc2	equ	0xFDE
  1292                           postdec2	equ	0xFDD
  1293                           preinc2	equ	0xFDC
  1294                           plusw2	equ	0xFDB
  1295                           fsr2h	equ	0xFDA
  1296                           fsr2l	equ	0xFD9
  1297                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_GPIO_Write
    _GPIO_Write->_GPIO_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1039
                          _GPIO_Init
                          _GPIO_Read
                  _GPIO_SetDirection
                         _GPIO_Write
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2      69
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_Write                                          12    10      2     323
                                             10 COMRAM    12    10      2
                          _GPIO_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _GPIO_SetDirection                                   12    10      2     323
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_Read                                           10     9      1     324
                                              0 COMRAM    10     9      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Init
   _GPIO_Read
   _GPIO_SetDirection
   _GPIO_Write
     _GPIO_Read (ARG)
   _delay_ms

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBIGSFR_1        481      0       0      0.0%
BITBIGSFR          256      0       0      0.0%
COMRAM              95     22      22     23.2%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BIGRAM            2047      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      22      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Mar 15 18:12:35 2025

                        l13 0DA6                          l31 0D7E                          l16 0DDC  
                        l27 0E3A                          l51 0ABE                          l52 0C16  
                        l73 0AA6                          l59 0C14                 ?_GPIO_Write 000B  
                       l824 0E2E                         u500 0C3E                         u501 0C3A  
                       u610 0946                         u530 0CA4                         u514 0C50  
                       u611 0942                         u531 0CA0                         u515 0C4C  
                       u604 092C                         u524 0C7A                         u460 0DA2  
                       u605 0928                         u525 0C76                         u461 0D9E  
                       u470 0DC2                         u471 0DBE                         u704 0A4C  
                       u624 0958                         u560 0D0A                         u544 0CB6  
                       u720 0ABA                         u480 0DDC                         u705 0A48  
                       u625 0954                         u561 0D06                         u545 0CB2  
                       u721 0AB6                         u481 0DD8                         u714 0A72  
                       u650 09C0                         u634 097E                         u554 0CE0  
                       u490 0C2A                         u730 0AD4                         u715 0A6E  
                       u651 09BC                         u635 097A                         u555 0CDC  
                       u491 0C26                         u731 0AD0                         u644 09A6  
                       u804 0BB2                         u820 0E10                         u645 09A2  
                       u805 0BAE                         u821 0E0A                         u590 0914  
                       u574 0D1C                         u814 0BDC                         u830 0E12  
                       u591 0910                         u575 0D18                         u815 0BD8  
                       u664 09D2                         u584 0D46                         u760 0B3A  
                       u744 0AE6                         u665 09CE                         u585 0D42  
                       u761 0B36                         u745 0AE2                         u690 0A3A  
                       u674 09F8                         u754 0B10                         u691 0A36  
                       u675 09F4                         u755 0B0C                         u684 0A20  
                       u685 0A1C                         u790 0BA0                         u774 0B4C  
                       u791 0B9C                         u775 0B48                         u784 0B76  
                       u785 0B72                        l1020 0D80                        l1110 0AAA  
                      l1030 0DAC                        l1022 0D84                        l1040 0C3E  
                      l1120 0B22                        l1024 0D8C                        l1032 0DC2  
                      l1050 0CCE                        l1042 0C68                        l1034 0C1A  
                      l1130 0B90                        l1122 0B2A                        l1114 0AC4  
                      l1108 0A88                        l1060 0D58                        l1052 0CF2  
                      l1044 0C8C                        l1132 0BA0                        l1124 0B3A  
                      l1116 0AD4                        l1140 0BF6                        l1028 0DA8  
                      l1054 0CFA                        l1046 0C94                        l1038 0C2E  
                      l1134 0BCA                        l1126 0B64                        l1118 0AFE  
                      l1142 0DDE                        l1072 091A                        l1056 0D0A  
                      l1048 0CA4                        l1064 0D60                        l1136 0BEE  
                      l1128 0B88                        l1144 0DE2                        l1082 0994  
                      l1074 0946                        l1066 0904                        l1058 0D34  
                      l1146 0DF0                        l1092 0A0E                        l1084 09C0  
                      l1076 096C                        l1068 0914                        l1148 0E1A  
                      l1094 0A3A                        l1086 09E6                        l1078 098E  
                      l1096 0A60                        l1088 0A08                        l1098 0A82  
                      _main 0DDE               _GPIO_Read$105 0005               _GPIO_Read$106 0007  
             _GPIO_Read$107 0009                        start 7FFC                ___param_bank 0000  
                     ?_main 0001               _GPIO_Write$99 0011  GPIO_SetDirection@direction 0002  
                     status 0FD8             __initialization 0E3C                __end_of_main 0E2E  
                    ??_main 0017               __activetblptr 0002           __end_of_GPIO_Init 0E3C  
         __end_of_GPIO_Read 0AA8            __end_of_delay_ms 0DDE              _GPIO_Write$100 0013  
            _GPIO_Write$101 0015                GPIO_Read@pin 0001                      isa$std 0001  
              __mediumconst 0900                      tblptru 0FF8           _GPIO_SetDirection 0C18  
        ?_GPIO_SetDirection 0001                  __accesstop 0060     __end_of__initialization 0E3C  
             ___rparam_used 0001         ??_GPIO_SetDirection 0003              __pcstackCOMRAM 0001  
              ??_GPIO_Write 000D   __end_of_GPIO_SetDirection 0D80          __end_of_GPIO_Write 0C18  
      GPIO_SetDirection@pin 0001                   ?_delay_ms 0001                     __Hparam 0000  
                   __Lparam 0000               GPIO_Read@port 0004                __psmallconst 0900  
                   __pcinit 0E3C                     __ramtop 0900                     __ptext0 0DDE  
                   __ptext1 0D80                     __ptext2 0AA8                     __ptext3 0C18  
                   __ptext4 0902                     __ptext5 0E2E                  ??_delay_ms 0003  
                 _GPIO_Init 0E2E                   _GPIO_Read 0902                  delay_ms@ms 0001  
      end_of_initialization 0E3C               __Lmediumconst 0000               GPIO_Write@pin 000B  
                ?_GPIO_Init 0001                  ?_GPIO_Read 0001         start_initialization 0E3C  
               ??_GPIO_Init 0001                 ??_GPIO_Read 0002       GPIO_SetDirection@port 0006  
               __smallconst 0900                   delay_ms@j 0003                    __Hrparam 0000  
                  __Lrparam 0000                    _delay_ms 0D80                    isa$xinst 0000  
      _GPIO_SetDirection$92 0007        _GPIO_SetDirection$93 0009        _GPIO_SetDirection$94 000B  
                _GPIO_Write 0AA8             GPIO_Write@value 000C              GPIO_Write@port 0010  
